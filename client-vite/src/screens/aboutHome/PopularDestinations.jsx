import React, { useState, useEffect } from "react";
import { useNavigate } from "react-router-dom";
import axios from "axios";

export default function PopularDestinations() {
  const navigate = useNavigate();
  const [activeTab, setActiveTab] = useState("city"); // 'city' | 'stay' | 'area'
  const [regions, setRegions] = useState([]);
  const [loading, setLoading] = useState(true);

  /** üß≠ G·ªçi API l·∫•y danh s√°ch khu v·ª±c t·ª´ BE */
  useEffect(() => {
    const fetchRegions = async () => {
      try {
        const { data } = await axios.get("/api/regions");
        setRegions(data);
      } catch (error) {
        console.error("L·ªói khi t·∫£i danh s√°ch khu v·ª±c:", error);
      } finally {
        setLoading(false);
      }
    };
    fetchRegions();
  }, []);

  if (loading) {
    return (
      <div className="py-20 text-center text-gray-500 text-sm">
        ƒêang t·∫£i danh s√°ch khu v·ª±c...
      </div>
    );
  }

  return (
    <section className="py-16 bg-white border-t">
      <div className="max-w-6xl mx-auto px-4">
        {/* Ti√™u ƒë·ªÅ */}
        <h2 className="text-2xl md:text-3xl font-bold text-[#003580] mb-6">
          Ph·ªï bi·∫øn v·ªõi du kh√°ch t·ª´ Vi·ªát Nam
        </h2>

        {/* Tabs */}
        <div className="flex flex-wrap items-center gap-4 mb-8 border-b border-gray-200">
          {[
            { id: "city", label: "Th√†nh ph·ªë trong n∆∞·ªõc" },
            { id: "stay", label: "Ch·ªó ngh·ªâ" },
            { id: "area", label: "Khu v·ª±c" },
          ].map((tab) => (
            <button
              key={tab.id}
              onClick={() => setActiveTab(tab.id)}
              className={`pb-2 px-4 text-[15px] font-semibold transition ${
                activeTab === tab.id
                  ? "text-[#003580] border-b-2 border-[#003580]"
                  : "text-gray-500 hover:text-[#003580]"
              }`}
            >
              {tab.label}
            </button>
          ))}
        </div>

        {/* --- Th√†nh ph·ªë trong n∆∞·ªõc --- */}
        {activeTab === "city" && (
          <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-y-2 text-[13px] text-gray-700 mb-8 animate-fadeIn">
            {regions
              ?.filter((r) =>
                [
                  "H√† N·ªôi",
                  "H·ªì Ch√≠ Minh",
                  "ƒê√† N·∫µng",
                  "Kh√°nh H√≤a",
                  "ƒê·ªìng Nai",
                  "Hu·∫ø",
                  "Ph√∫ Qu·ªëc",
                  "C·∫ßn Th∆°",
                  "Quy Nh∆°n",
                  "L√¢m ƒê·ªìng",
                  "H·∫° Long",
                ].includes(r.name)
              )
              .map((region) => (
                <button
                  key={region._id}
                  onClick={() =>
                    navigate(`/room-results?destination=${region._id}`)
                  }
                  className="text-left text-gray-700 hover:text-[#0071c2] transition"
                >
                  Kh√°ch s·∫°n {region.name}
                </button>
              ))}
          </div>
        )}

        {/* --- Ch·ªó ngh·ªâ --- */}
        {activeTab === "stay" && (
          <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-y-2 text-[13px] text-gray-700 mb-8 animate-fadeIn">
            {[
              "Homestay",
              "C√°c resort",
              "Kh√°ch s·∫°n 5 sao",
              "Kh√°ch s·∫°n 3 sao",
              "Kh√°ch s·∫°n gi√° r·∫ª",
              "Kh√°ch s·∫°n c√≥ h·ªì b∆°i",
              "Kh√°ch s·∫°n gia ƒë√¨nh",
              "C√°c bi·ªát th·ª±",
              "C√°c nh√† kh√°ch",
              "CƒÉn h·ªô d·ªãch v·ª•",
              "CƒÉn h·ªô du l·ªãch",
              "Kh√°ch s·∫°n sang tr·ªçng",
              "C√°c kh√°ch s·∫°n th√¢n thi·ªán v·ªõi th√∫ c∆∞ng",
              "C√°c ch·ªó ngh·ªâ c√≥ onsen",
              "C√°c hostel",
              "C√°c ryokan",
              "Nh√† ngh·ªâ B&B",
            ].map((type, index) => (
              <p
                key={index}
                className="text-gray-700 hover:text-[#0071c2] cursor-pointer transition"
              >
                {type}
              </p>
            ))}
          </div>
        )}

        {/* --- Khu v·ª±c --- */}
        {activeTab === "area" && (
          <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-5 gap-y-3 text-[13px] text-gray-700 mb-8 animate-fadeIn">
            {regions.map((region) => (
              <button
                key={region._id}
                onClick={() =>
                  navigate(`/room-results?region=${region._id}`)
                }
                className="flex items-center gap-2 text-left text-gray-700 hover:text-[#0071c2] transition"
              >
                {region.imageUrl && (
                  <img
                    src={region.imageUrl}
                    alt={region.name}
                    className="w-6 h-6 object-cover rounded"
                  />
                )}
                {region.name}
              </button>
            ))}
          </div>
        )}

        {/* N√∫t hi·ªÉn th·ªã th√™m */}
        <div className="mt-4">
          <button
            onClick={() => navigate("/regions")}
            className="flex items-center text-[#0071c2] hover:underline text-sm font-medium"
          >
            <span className="mr-2 text-lg">Ôºã</span> Hi·ªÉn th·ªã th√™m
          </button>
        </div>
      </div>
    </section>
  );
}
